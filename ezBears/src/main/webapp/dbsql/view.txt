[예지]---------------------------------------------------------------------
create or replace view myBoardListView
as
SELECT M.MEM_ID, M.MEM_NO, MY.MY_BOARD_NO, B.M_BOARD_NO, B.M_BOARD_NAME  
FROM MEMBER M
LEFT JOIN my_board MY
ON M.MEM_NO = MY.MEM_NO
LEFT JOIN M_BOARD B
ON MY.M_BOARD_NO = B.M_BOARD_NO;


create or replace view teamNoticeListView
as
SELECT A.*, B.MEM_ID,B.MEM_NAME, B.MEM_IMAGE, B.DEPT_NAME
FROM
(
    SELECT T.*, MY.M_BOARD_NO
    FROM TEAM_NOTICE T
    JOIN MY_BOARD MY
    ON T.MY_BOARD_NO = my.my_board_no
)A JOIN
(
    SELECT M.MEM_NO,M.MEM_ID, MEM_NAME, MEM_IMAGE, D.DEPT_NAME
    FROM MEMBER M
    JOIN DEPT D
    ON M.DEPT_NO = D.DEPT_NO
) B
ON A.MEM_NO = B.MEM_NO;



create or replace view teamWorkBoardListView
as
SELECT A.*, B.MEM_ID,B.MEM_NAME, B.MEM_IMAGE, B.DEPT_NAME
FROM
(
    SELECT T.*, MY.M_BOARD_NO
    FROM TEAM_WORK_BOARD T
    JOIN MY_BOARD MY
    ON T.MY_BOARD_NO = my.my_board_no
)A JOIN
(
    SELECT M.MEM_NO,M.MEM_ID, MEM_NAME, MEM_IMAGE, D.DEPT_NAME
    FROM MEMBER M
    JOIN DEPT D
    ON M.DEPT_NO = D.DEPT_NO
) B
ON A.MEM_NO = B.MEM_NO;



create or replace procedure DELETETEAMNOTICE
(
--매개변수
   m_team_notice_no number,
   m_step number,
   m_contentno number,
   m_groupno number
)
is
--변수선언부
     cnt number;

begin
--처리할 내용
    /*
    답변이 있는 원본글인 경우에는 레코드를 삭제하지 말고 status="N"로 update
    */
    if m_step = 0 then
      --답변글이 존재하는지 체크
      select count(*) into cnt from team_notice
      where contentno = m_contentno;

         --답변글이 존재하는 경우
         if cnt>1 then
            update team_notice set status='N'
            where contentno = m_contentno;
        else --답변글이 없는 경우
            delete team_notice where team_notice_no = m_team_notice_no;
        end if;
    else --답변글인경우
        if m_step = 1 then 
            --대댓글이 존재하는지 체크
            select count(*) into cnt from team_notice
            where groupno = m_groupno
            and team_notice_no != m_team_notice_no;
            --대댓글이 존재하면
            if cnt >0 then
                update team_notice set status='N'
                where team_notice_no = m_team_notice_no;
            else --대댓글이 없으면 삭제
                delete team_notice where team_notice_no = m_team_notice_no;
            end if;
        else --대댓글이면 삭제
            delete team_notice where team_notice_no = m_team_notice_no;
        end if;
    end if;
    commit;

EXCEPTION
    WHEN OTHERS THEN
	raise_application_error(-20001, ' 실패!');
        ROLLBACK;
end;

[다희]---------------------------------------------------------------------


[희진]---------------------------------------------------------------------
create or replace view myBoardInfo
as
select b.*,m.mem_id
from member m join my_board b
on m.mem_no = b.mem_no;


create or replace view calenderInfo
as
select s.mem_no,info.mem_id,info.my_board_no,info.m_board_no,s.schedule_start,s.schedule_end,s.schedule_title, s.schedule_no  from
myBoardInfo info join schedule s
on info.my_board_no = s.my_board_no;

[충혁]---------------------------------------------------------------------

[판주]---------------------------------------------------------------------
create or replace view memberView
as
select m.*,p.position_name
from member m join position p
on m.position_no = p.position_no;

select * from memberView;

create or replace view staffView
as
select s.*,dept_name
from staff s join dept d
on s.dept_no = d.dept_no;

select * from staffView;


create or replace view memberView1
as
select m.*,d.dept_name
from memberView m join dept d
on m.dept_no = d.dept_no;

select * from memberView1;


create or replace view notice1
as
select n.*,m.dept_no,m.mem_name,m.mem_id,m.mem_image,d.dept_name
from notice n left join member m
on m.mem_no = n.mem_no
right join dept d
on m.dept_no=d.dept_no;

create or replace view noticeView
as
select n.*,m.mem_name,m.dept_no
from notice n join member m
on n.mem_no = m.mem_no;

select * from noticeView;


[건우]---------------------------------------------------------------------